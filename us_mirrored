default  partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

    name[Group1]= "English (US)";

    include "mirrored(basic)"

    key <AE11> {	[     grave,	asciitilde	]	};
    key <AE10> {	[	  1,	exclam 		]	};
    key <AE09> {	[	  2,	at		]	};
    key <AE08> {	[	  3,	numbersign	]	};
    key <AE07> {	[	  4,	dollar		]	};
    key <AE06> {	[	  5,	percent		]	};
    key <AE05> {	[	  6,	asciicircum	]	};
    key <AE04> {	[	  7,	ampersand	]	};
    key <AE03> {	[	  8,	asterisk	]	};
    key <AE02> {	[	  9,	parenleft	]	};
    key <AE01> {	[	  0,	parenright	]	};
    key <TLDE> {	[     minus,	underscore	]	};
    key <AE12> {	[     equal,	plus		]	};

    key <AD10> {	[	  q,	Q 		]	};
    key <AD09> {	[	  w,	W		]	};
    key <AD08> {	[	  e,	E		]	};
    key <AD07> {	[	  r,	R		]	};
    key <AD06> {	[	  t,	T		]	};
    key <AD05> {	[	  y,	Y		]	};
    key <AD04> {	[	  u,	U		]	};
    key <AD03> {	[	  i,	I		]	};
    key <AD02> {	[	  o,	O		]	};
    key <AD01> {	[	  p,	P		]	};
    key <AD11> {	[ bracketleft,	braceleft	]	};
    key <AD12> {	[ bracketright,	braceright	]	};

    key <AC10> {	[	  a,	A 		]	};
    key <AC09> {	[	  s,	S		]	};
    key <AC08> {	[	  d,	D		]	};
    key <AC07> {	[	  f,	F		]	};
    key <AC06> {	[	  g,	G		]	};
    key <AC05> {	[	  h,	H		]	};
    key <AC04> {	[	  j,	J		]	};
    key <AC03> {	[	  k,	K		]	};
    key <AC02> {	[	  l,	L		]	};
    key <AC01> {	[ semicolon,	colon		]	};
    key <AC11> {	[ apostrophe,	quotedbl	]	};

    key <AB10> {	[	  z,	Z 		]	};
    key <AB09> {	[	  x,	X		]	};
    key <AB08> {	[	  c,	C		]	};
    key <AB07> {	[	  v,	V		]	};
    key <AB06> {	[	  b,	B		]	};
    key <AB05> {	[	  n,	N		]	};
    key <AB04> {	[	  m,	M		]	};
    key <AB03> {	[     comma,	less		]	};
    key <AB02> {	[    period,	greater		]	};
    key <AB01> {	[     slash,	question	]	};

    key <BKSL> {	[ backslash,         bar	]	};
};

partial alphanumeric_keys
xkb_symbols "euro" {

    include "us_mirrored(basic)"
    name[Group1]= "English (US, with euro on 5)";

    include "eurosign(5)"

    include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "intl" {

    include "us_mirrored(basic)"
    name[Group1]= "English (US, international with dead keys)";

    key <AE11> { [dead_grave, dead_tilde,         grave,       asciitilde ] };
    key <AE10> { [	   1,     exclam,    exclamdown,      onesuperior ] };
    key <AE09> { [	   2,         at,   twosuperior, dead_doubleacute ] };
    key <AE08> { [	   3, numbersign, threesuperior,      dead_macron ] };
    key <AE07> { [	   4,     dollar,      currency,         sterling ] };
    key <AE06> { [	   5,    percent,      EuroSign,     dead_cedilla ] };
    key <AE05> { [    6, dead_circumflex,    onequarter,      asciicircum ] };
    key <AE04> { [	   7,  ampersand,       onehalf,	dead_horn ] };
    key <AE03> { [	   8,   asterisk, threequarters,      dead_ogonek ] };
    key <AE02> { [	   9,  parenleft, leftsinglequotemark, dead_breve ] };
    key <AE01> { [	   0, parenright, rightsinglequotemark, dead_abovering ] };
    key <TLDE> { [     minus, underscore,           yen,    dead_belowdot ] };
    key <AE12> { [     equal,       plus,      multiply,         division ] };

    key <AD10> { [	   q,          Q,    adiaeresis,       Adiaeresis ] };
    key <AD09> { [	   w,          W,         aring,            Aring ] };
    key <AD08> { [	   e,          E,        eacute,           Eacute ] };
    key <AD07> { [	   r,          R,    registered,       registered ] };
    key <AD06> { [	   t,          T,         thorn,            THORN ] };
    key <AD05> { [	   y,          Y,    udiaeresis,       Udiaeresis ] };
    key <AD04> { [	   u,          U,        uacute,           Uacute ] };
    key <AD03> { [	   i,          I,        iacute,           Iacute ] };
    key <AD02> { [	   o,          O,        oacute,           Oacute ] };
    key <AD01> { [	   p,          P,    odiaeresis,       Odiaeresis ] };
    key <AD11> { [ bracketleft,  braceleft,  guillemotleft, leftdoublequotemark ] };
    key <AD12> { [bracketright, braceright, guillemotright, rightdoublequotemark ] };

    key <AC10> { [	   a,          A,        aacute,           Aacute ] };
    key <AC09> { [	   s,          S,        ssharp,          section ] };
    key <AC08> { [	   d,          D,           eth,              ETH ] };
    key <AC07> { [	   f,          F,             f,                F ] };
    key <AC06> { [	   g,          G,             g,                G ] };
    key <AC05> { [	   h,          H,             h,                H ] };
    key <AC04> { [	   j,          J,             j,                J ] };
    key <AC03> { [	   k,          K,            oe,               OE ] };

    key <AC02> { [	   l,          L,        oslash,         Ooblique ] };
    key <AC01> { [ semicolon,      colon,     paragraph,           degree ] };
    key <AC11> { [dead_acute, dead_diaeresis, apostrophe,        quotedbl ] };

    key <AB10> { [	   z,          Z,            ae,               AE ] };
    key <AB09> { [	   x,          X,             x,                X ] };
    key <AB08> { [	   c,          C,     copyright,             cent ] };
    key <AB07> { [	   v,          V,             v,                V ] };
    key <AB06> { [	   b,          B,             b,                B ] };
    key <AB05> { [	   n,          N,        ntilde,           Ntilde ] };
    key <AB04> { [	   m,          M,            mu,               mu ] };
    key <AB03> { [     comma,       less,      ccedilla,         Ccedilla ] };
    key <AB02> { [    period,    greater, dead_abovedot,       dead_caron ] };
    key <AB01> { [     slash,   question,  questiondown,        dead_hook ] };
    key <BKSL> { [ backslash,        bar,       notsign,        brokenbar ] };

    key <LSGT> { [ backslash,   bar,            backslash,      bar ] };

    include "level3(ralt_switch)"
};

// Based on symbols/us_intl keyboard map:
// Dead-keys definition for a very simple US/ASCII layout.
// by Conectiva (http://www.conectiva.com.br)
// modified by Ricardo Y. Igarashi (iga@that.com.br)

// Added the following deadkeys, to make it truly international:
//
// dead_macron: on AltGr-minus
// dead_breve: on AltGr-parenleft
// dead_abovedot: on AltGr-period
// dead_abovering: on AltGr-0
// dead_doubleacute: on AltGr-equal (as quotedbl is already used)
// dead_caron: on AltGr-less (AltGr-shift-comma)
// dead_cedilla: on AltGr-comma
// dead_ogonek: on AltGr-semicolon
// dead_belowdot: on AltGr-underscore (AltGr-shift-minus)
// dead_hook: on AltGr-question
// dead_horn: on AltGr-plus (AltGr-shift-equal)
// dead_diaeresis: on AltGr-colon (Alt-shift-semicolon)
//
// those were already there:
// dead_grave
// dead_acute
// dead_circumflex
// dead_tilde
// dead_diaeresis

partial alphanumeric_keys
xkb_symbols "alt-intl" {

  include "us_mirrored"
  name[Group1]= "English (US, alternative international)";

  key <AE11> { [ dead_grave, dead_tilde,    grave,	      asciitilde    ] };
  key <AE06> { [          5, percent,	    EuroSign			    ] };
  key <AE05> { [	  6, dead_circumflex, asciicircum,    asciicircum   ] };
  key <AE02> { [	  9, parenleft, leftsinglequotemark,  dead_breve ] };
  key <AE01> { [	  0, parenright, rightsinglequotemark, dead_abovering ] };
  key <TLDE> { [      minus, underscore,    dead_macron,      dead_belowdot ] };
  key <AE12> { [      equal, plus,	    dead_doubleacute, dead_horn	    ] };

  key <AD08> { [          e, E,		     EuroSign,         cent	    ] };

  key <AC01> { [  semicolon, colon,	     dead_ogonek,   dead_diaeresis  ] };
  key <AC11> { [ dead_acute, dead_diaeresis, apostrophe,    quotedbl	    ] };

  key <AB03> { [      comma, less,	     dead_cedilla,  dead_caron	    ] };
  key <AB02> { [     period, greater,	     dead_abovedot, dead_circumflex ] };
  key <AB01> { [      slash, question,	     dead_hook,	    dead_hook	    ] };

  key <LSGT> { [ backslash,   bar,            backslash,      bar ] };

  include "level3(ralt_switch)"
};

// based on a keyboard map from an 'xkb/symbols/dk' file

partial alphanumeric_keys
xkb_symbols "dvorak" {

    name[Group1]= "English (Dvorak)";

    key <AE11> { [       grave,	asciitilde, dead_grave, dead_tilde	] };

    key <AE10> { [	    1,	exclam 		]	};
    key <AE09> { [	    2,	at		]	};
    key <AE08> { [	    3,	numbersign	]	};
    key <AE07> { [	    4,	dollar		]	};
    key <AE06> { [	    5,	percent		]	};
    key <AE05> { [	    6,	asciicircum, dead_circumflex, dead_circumflex ]	};
    key <AE04> { [	    7,	ampersand	]	};
    key <AE03> { [	    8,	asterisk	]	};
    key <AE02> { [	    9,	parenleft,  dead_grave]	};
    key <AE01> { [	    0,	parenright	]	};
    key <TLDE> { [ bracketleft,	braceleft	]	};
    key <AE12> { [ bracketright, braceright,  dead_tilde] };

    key <AD10> { [  apostrophe,	quotedbl, dead_acute, dead_diaeresis	] };
    key <AD09> { [	comma,	less,   dead_cedilla, dead_caron	] };
    key <AD08> { [      period,	greater, dead_abovedot, periodcentered	] };
    key <AD07> { [	    p,	P		]	};
    key <AD06> { [	    y,	Y		]	};
    key <AD05> { [	    f,	F		]	};
    key <AD04> { [	    g,	G		]	};
    key <AD03> { [	    c,	C		]	};
    key <AD02> { [	    r,	R		]	};
    key <AD01> { [	    l,	L		]	};
    key <AD11> { [	slash,	question	]	};
    key <AD12> { [	equal,	plus		]	};

    key <AC10> { [	    a,	A 		]	};
    key <AC09> { [	    o,	O		]	};
    key <AC08> { [	    e,	E		]	};
    key <AC07> { [	    u,	U		]	};
    key <AC06> { [	    i,	I		]	};
    key <AC05> { [	    d,	D		]	};
    key <AC04> { [	    h,	H		]	};
    key <AC03> { [	    t,	T		]	};
    key <AC02> { [	    n,	N		]	};
    key <AC01> { [	    s,	S		]	};
    key <AC11> { [	minus,	underscore	]	};

    key <AB10> { [   semicolon,	colon, dead_ogonek, dead_doubleacute ] };
    key <AB09> { [	    q,	Q		]	};
    key <AB08> { [	    j,	J		]	};
    key <AB07> { [	    k,	K		]	};
    key <AB06> { [	    x,	X		]	};
    key <AB05> { [	    b,	B		]	};
    key <AB04> { [	    m,	M		]	};
    key <AB03> { [	    w,	W		]	};
    key <AB02> { [	    v,	V		]	};
    key <AB01> { [	    z,	Z		]	};

    key <BKSL> { [  backslash,  bar             ]       };
};

// Dvorak international with dead keys
// Olivier Mehani (shtrom-xorg@ssji.net)
// Reproduce the per-key mapping of us(intl) for the dvorak layout
// aka "I just swapped my keys over"
partial alphanumeric_keys
xkb_symbols "dvorak-intl" {

    include "us_mirrored(dvorak)"
    name[Group1]= "English (Dvorak, international with dead keys)";

    key <AE11> { [dead_grave, dead_tilde,         grave,       asciitilde ] };

    key <AE10> { [	   1,     exclam,    exclamdown,      onesuperior ] };
    key <AE09> { [	   2,         at,   twosuperior, dead_doubleacute ] };
    key <AE08> { [	   3, numbersign, threesuperior,      dead_macron ] };
    key <AE07> { [	   4,     dollar,      currency,         sterling ] };
    key <AE06> { [	   5,    percent,      EuroSign,     dead_cedilla ] };
    key <AE05> { [    6, dead_circumflex,    onequarter,      asciicircum ] };
    key <AE04> { [	   7,  ampersand,       onehalf,	dead_horn ] };
    key <AE03> { [	   8,   asterisk, threequarters,      dead_ogonek ] };
    key <AE02> { [	   9,  parenleft, leftsinglequotemark, dead_breve ] };
    key <AE01> { [	   0, parenright, rightsinglequotemark, dead_abovering ] };
    key <TLDE> { [ bracketleft,  braceleft,  guillemotleft, leftdoublequotemark ] };
    key <AE12> { [bracketright, braceright, guillemotright, rightdoublequotemark ] };

    key <AD10> { [dead_acute, dead_diaeresis, apostrophe,        quotedbl ] };
    key <AD09> { [     comma,       less,      ccedilla,         Ccedilla ] };
    key <AD08> { [    period,    greater, dead_abovedot,       dead_caron ] };
    key <AD07> { [	   p,          P,    odiaeresis,       Odiaeresis ] };
    key <AD06> { [	   y,          Y,    udiaeresis,       Udiaeresis ] };
    // key <AD05> { [	   f,	F		]	};
    // key <AD04> { [	   g,	G		]	};
    key <AD03> { [	   c,          C,     copyright,             cent ] };
    key <AD02> { [	   r,          R,    registered,       registered ] };
    key <AD01> { [	   l,          L,        oslash,         Ooblique ] };
    key <AD11> { [     slash,   question,  questiondown,        dead_hook ] };
    // key <AD12> { [     equal,       plus,      multiply,         division ] };

    key <AC10> { [	   a,          A,        aacute,           Aacute ] };
    key <AC09> { [	   o,          O,        oacute,           Oacute ] };
    key <AC08> { [	   e,          E,        eacute,           Eacute ] };
    key <AC07> { [	   u,          U,        uacute,           Uacute ] };
    key <AC06> { [	   i,          I,        iacute,           Iacute ] };
    key <AC05> { [	   d,          D,           eth,              ETH ] };
    // key <AC04> { [	   h,	H		]	};
    key <AC03> { [	   t,          T,         thorn,            THORN ] };
    key <AC02> { [	   n,          N,        ntilde,           Ntilde ] };
    key <AC01> { [	   s,          S,        ssharp,          section ] };
    // key <AC11> { [     minus, underscore,           yen,    dead_belowdot ] };

    key <AB10> { [ semicolon,      colon,     paragraph,           degree ] };
    key <AB09> { [	   q,          Q,    adiaeresis,       Adiaeresis ] };
    // key <AB08> { [	   j,	J		]	};
    key <AB07> { [	   k,          K,            oe,               OE ] };
    // key <AB06> { [	   x,	X		]	};
    // key <AB05> { [	   b,	B		]	};
    key <AB04> { [	   m,          M,            mu,               mu ] };
    key <AB03> { [	   w,          W,         aring,            Aring ] };
    // key <AB02> { [	   v,	V		]	};
    key <AB01> { [	   z,          Z,            ae,               AE ] };

    key <BKSL> { [ backslash,        bar,       notsign,        brokenbar ] };

    include "level3(ralt_switch)"
};

// Dvorak international without dead keys
// Stephane Magnenat (stephane at magnenat dot net, http://stephane.magnenat.net)
// Based on information from http://www.poupinou.org/dvorak/index.html
//
//  `   1   2   3   4   5   6   7   8   9   0   [   ]   \
//                  €
//
//      '   ,   .   p   y   f   g   c   r   l   /   =
//          ä   ê   ë   ü           ç
//
//      a   o   e   u   i   d   h   t   n   s   -
//      à   ô   é   û   î                   ß
//
//      ;   q   j   k   x   b   m   w   v   z
//      â   ö   è   ù   ï

partial alphanumeric_keys
xkb_symbols "dvorak-alt-intl" {

    include "us_mirrored(dvorak)"
    name[Group1]= "English (Dvorak alternative international no dead keys)";

    key <AE07> { [         4,  dollar,    EuroSign ] };

    key <AD09> { [     comma,    less,  adiaeresis,       dead_caron ] };
    key <AD08> { [    period, greater, ecircumflex,   periodcentered	] };
    key <AD07> { [         p,       P,  ediaeresis,     dead_cedilla ] };
    key <AD06> { [         y,       Y,  udiaeresis ] };
    key <AD03> { [         c,       C,    ccedilla,    dead_abovedot ] };

    key <AC10> { [         a,       A,      agrave ] };
    key <AC09> { [         o,       O, ocircumflex ] };
    key <AC08> { [         e,       E,      eacute ] };
    key <AC07> { [         u,       U, ucircumflex ] };
    key <AC06> { [         i,       I, icircumflex ] };
    key <AC01> { [         s,       S,      ssharp ] };

    key <AB10> { [ semicolon,   colon, acircumflex ] };
    key <AB09> { [         q,       Q,  odiaeresis,      dead_ogonek ] };
    key <AB08> { [         j,       J,      egrave, dead_doubleacute ] };
    key <AB07> { [         k,       K,      ugrave ] };
    key <AB06> { [         x,       X,  idiaeresis ] };

    include "level3(ralt_switch)"
};

// Left and right handed dvorak layouts
// by sqweek <sqweek@gmail.com> 2006-01-30
// Based on the corresponding layouts in the console-tools package.
partial alphanumeric_keys
xkb_symbols "dvorak-l" {

    include "us_mirrored(dvorak)"
    name[Group1]= "English (left handed Dvorak)";

    key <AE10> {	[ bracketleft,	braceleft	]	};
    key <AE09> {	[ bracketright,	braceright	]	};
    key <AE08> {	[	slash,	question	]	};
    key <AE07> {	[	    p,	P		]	};
    key <AE06> {	[	    f,	F		]	};
    key <AE05> {	[	    m,	M		]	};
    key <AE04> {	[	    l,	L		]	};
    key <AE03> {	[	    j,	J		]	};
    key <AE02> {	[	    4,	dollar		]	};
    key <AE01> {	[	    3,	numbersign	]	};
    key <TLDE> {	[	    2,	at		]	};
    key <AE12> {	[	    1,	exclam 		]	};

    key <AD10> {	[   semicolon,	colon 		]	};
    key <AD09> {	[	    q,	Q		]	};
    key <AD08> {	[	    b,	B		]	};
    key <AD07> {	[	    y,	Y		]	};
    key <AD06> {	[	    u,	U		]	};
    key <AD05> {	[	    r,	R		]	};
    key <AD04> {	[	    s,	S		]	};
    key <AD03> {	[	    o,	O		]	};
    key <AD02> {	[      period,	greater		]	};
    key <AD01> {	[	    6,	asciicircum	]	};
    key <AD11> {	[	    5,	percent		]	};
    key <AD12> {	[	equal,	plus		]	};

    key <AC10> {	[	minus,	underscore	]	};
    key <AC09> {	[	    k,	K		]	};
    key <AC08> {	[	    c,	C		]	};
    key <AC07> {	[	    d,	D		]	};
    key <AC06> {	[	    t,	T		]	};
    key <AC05> {	[	    h,	H		]	};
    key <AC04> {	[	    e,	E		]	};
    key <AC03> {	[	    a,	A 		]	};
    key <AC02> {	[	    z,	Z		]	};
    key <AC01> {	[	    8,	asterisk	]	};
    key <AC11> {	[	    7,	ampersand	]	};

    key <AB10> {	[  apostrophe,	quotedbl	] 	};
    key <AB09> {	[	    x,	X		]	};
    key <AB08> {	[	    g,	G		]	};
    key <AB07> {	[	    v,	V		]	};
    key <AB06> {	[	    w,	W		]	};
    key <AB05> {	[	    n,	N		]	};
    key <AB04> {	[	    i,	I		]	};
    key <AB03> {	[	comma,	less		]	};
    key <AB02> {	[	    0,	parenright	]	};
    key <AB01> {	[	    9,	parenleft	]	};
};

partial alphanumeric_keys
xkb_symbols "dvorak-r" {

    include "us_mirrored(dvorak)"
    name[Group1]= "English (right handed Dvorak)";

    key <AE10> {	[	    1,	exclam 		]	};
    key <AE09> {	[	    2,	at		]	};
    key <AE08> {	[	    3,	numbersign	]	};
    key <AE07> {	[	    4,	dollar		]	};
    key <AE06> {	[	    j,	J		]	};
    key <AE05> {	[	    l,	L		]	};
    key <AE04> {	[	    m,	M		]	};
    key <AE03> {	[	    f,	F		]	};
    key <AE02> {	[	    p,	P		]	};
    key <AE01> {	[	slash,	question	]	};
    key <TLDE> {	[ bracketleft,	braceleft	]	};
    key <AE12> {	[ bracketright,	braceright	]	};

    key <AD10> {	[	    5,	percent		]	};
    key <AD09> {	[	    6,	asciicircum ]	};
    key <AD08> {	[	    q,	Q		]	};
    key <AD07> {	[      period,	greater		]	};
    key <AD06> {	[	    o,	O		]	};
    key <AD05> {	[	    r,	R		]	};
    key <AD04> {	[	    s,	S		]	};
    key <AD03> {	[	    u,	U		]	};
    key <AD02> {	[	    y,	Y		]	};
    key <AD01> {	[	    b,	B		]	};
    key <AD11> {	[   semicolon,	colon 		]	};
    key <AD12> {	[	equal,	plus		]	};

    key <AC10> {	[	    7,	ampersand	]	};
    key <AC09> {	[	    8,	asterisk	]	};
    key <AC08> {	[	    z,	Z		]	};
    key <AC07> {	[	    a,	A 		]	};
    key <AC06> {	[	    e,	E		]	};
    key <AC05> {	[	    h,	H		]	};
    key <AC04> {	[	    t,	T		]	};
    key <AC03> {	[	    d,	D		]	};
    key <AC02> {	[	    c,	C		]	};
    key <AC01> {	[	    k,	K		]	};
    key <AC11> {	[	minus,	underscore	]	};

    key <AB10> {	[	    9,	parenleft	]	};
    key <AB09> {	[	    0,	parenright	]	};
    key <AB08> {	[	    x,	X		]	};
    key <AB07> {	[	comma,	less		]	};
    key <AB06> {	[	    i,	I		]	};
    key <AB05> {	[	    n,	N		]	};
    key <AB04> {	[	    w,	W		]	};
    key <AB03> {	[	    v,	V		]	};
    key <AB02> {	[	    g,	G		]	};
    key <AB01> {	[  apostrophe,	quotedbl	] 	};
};

// Classic dvorak layout
// by Piter Punk <piterpk@terra.com.br> - 2006-07-06 
// Based on dvorak layout and e-mail from Russel L. Harris rlharris@oplink.net 
// on xorg list.
partial alphanumeric_keys
xkb_symbols "dvorak-classic" {

    name[Group1]= "English (classic Dvorak)";

    key <AE11> { [       grave,	asciitilde, dead_grave, dead_tilde	] };

    key <AE10> { [ bracketleft,	braceleft	]	};
    key <AE09> { [	    7,	ampersand	]	};
    key <AE08> { [	    5,	percent		]	};
    key <AE07> { [	    3,	numbersign	]	};
    key <AE06> { [	    1,	exclam 		]	};
    key <AE05> { [	    9,	parenleft,  dead_grave]	};
    key <AE04> { [	    0,	parenright	]	};
    key <AE03> { [	    2,	at		]	};
    key <AE02> { [	    4,	dollar		]	};
    key <AE01> { [	    6,	asciicircum, dead_circumflex, dead_circumflex ]	};
    key <TLDE> { [	    8,	asterisk	]	};
    key <AE12> { [ bracketright, braceright,  dead_tilde] };

    key <AD10> { [	slash,	question	]	};
    key <AD09> { [	comma,	less,   dead_cedilla, dead_caron	] };
    key <AD08> { [      period,	greater, dead_abovedot, periodcentered	] };
    key <AD07> { [	    p,	P		]	};
    key <AD06> { [	    y,	Y		]	};
    key <AD05> { [	    f,	F		]	};
    key <AD04> { [	    g,	G		]	};
    key <AD03> { [	    c,	C		]	};
    key <AD02> { [	    r,	R		]	};
    key <AD01> { [	    l,	L		]	};
    key <AD11> { [  apostrophe,	quotedbl, dead_acute, dead_diaeresis	] };
    key <AD12> { [	equal,	plus		]	};

    key <AC10> { [	    a,	A 		]	};
    key <AC09> { [	    o,	O		]	};
    key <AC08> { [	    e,	E		]	};
    key <AC07> { [	    u,	U		]	};
    key <AC06> { [	    i,	I		]	};
    key <AC05> { [	    d,	D		]	};
    key <AC04> { [	    h,	H		]	};
    key <AC03> { [	    t,	T		]	};
    key <AC02> { [	    n,	N		]	};
    key <AC01> { [	    s,	S		]	};
    key <AC11> { [	minus,	underscore	]	};

    key <AB10> { [   semicolon,	colon, dead_ogonek, dead_doubleacute ] };
    key <AB09> { [	    q,	Q		]	};
    key <AB08> { [	    j,	J		]	};
    key <AB07> { [	    k,	K		]	};
    key <AB06> { [	    x,	X		]	};
    key <AB05> { [	    b,	B		]	};
    key <AB04> { [	    m,	M		]	};
    key <AB03> { [	    w,	W		]	};
    key <AB02> { [	    v,	V		]	};
    key <AB01> { [	    z,	Z		]	};
    key <BKSL> { [  backslash,  bar             ]       };
};

// Programmer Dvorak, by Roland Kaufmann <rlndkfmn at gmail dot com>
// License: BSD, available at <http://www.kaufmann.no/roland/dvorak/license.html>
// Main features: Numbers are in shift position (like French), symbols have been
// placed in locations that give good hand-alternation and finger rolling with
// symbols that usually follows, accented characters are possible for I18N.
partial alphanumeric_keys
xkb_symbols "dvp" {

    include "us_mirrored(dvorak)"
    name[Group1] = "English (programmer Dvorak)";

    //             Unmodified       Shift           AltGr            Shift+AltGr
    // symbols row, left side
    key <AE11> { [ dollar,          asciitilde,     dead_tilde                  ] };
    key <AE10> { [ ampersand,       percent                                     ] };
    key <AE09> { [ bracketleft,     7,              currency                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE08> { [ braceleft,       5,              cent                        ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE07> { [ braceright,      3,              yen                         ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE06> { [ parenleft,       1,              EuroSign                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE05> { [ equal,           9,              sterling                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };

    // symbols row, right side
    key <AE04> { [ asterisk,        0                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE03> { [ parenright,      2,              onehalf                     ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE02> { [ plus,            4                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE01> { [ bracketright,    6                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <TLDE> { [ exclam,          8,              exclamdown,      U2E18      ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };  // reversed interrobang
    key <AE12> { [ numbersign,      grave,          dead_grave                  ] };
    key <BKSP> { [ BackSpace,       BackSpace                                   ] };

    // upper row, left side
    key <AD10> { [ semicolon,       colon,          dead_diaeresis              ] };
    key <AD09> { [ comma,           less,           guillemotleft,   ellipsis   ] };
    key <AD08> { [ period,          greater,        guillemotright              ] };
    key <AD07> { [ p,               P,              paragraph,       section    ] };
    key <AD06> { [ y,               Y,              udiaeresis,      Udiaeresis ] };

    // upper row, right side
    key <AD03> { [ c,               C,              ccedilla,        Ccedilla   ] };
    key <AD02> { [ r,               R,              registered,      trademark  ] };
    key <AD11> { [ slash,           question,       questiondown,    U203D      ] };  // interrobang
    key <AD12> { [ at,              asciicircum,    dead_circumflex, dead_caron ] };

    // home row, left side
    key <AC10> { [ a,               A,              aring,           Aring      ] };
    key <AC09> { [ o,               O,              oslash,          Ooblique   ] };
    key <AC08> { [ e,               E,              ae,              AE         ] };
    key <AC07> { [ u,               U,              eacute,          Eacute     ] };

    // home row, right side
    key <AC05> { [ d,               D,              eth,             ETH        ] };
    key <AC04> { [ h,               H,              dead_acute                  ] };
    key <AC03> { [ t,               T,              thorn,           THORN      ] };
    key <AC02> { [ n,               N,              ntilde,          Ntilde     ] };
    key <AC01> { [ s,               S,              ssharp                      ] };
    key <AC11> { [ minus,           underscore,     hyphen,          endash     ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <BKSL> { [ backslash,       bar                                         ] };

    // lower row, left side
    key <AB10> { [ apostrophe,      quotedbl,       dead_acute                  ] };
    key <AB04> { [ m,               M,              mu                          ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };

    include "level3(ralt_switch)"
};

// phonetic layout for Russian letters on an US keyboard
// by Ivan Popov <pin@konvalo.org> 2005-07-17

// level3 modifier is a shortcut to the "us" meaning of the keys where
// we place cyrillic letters, handy for accessing the corresponding
// punctuation marks.
// It is important to have access to punctuation marks, and the rest of
// alphabetical keys are added for being consequent so that the users
// can expect the level3 modifier to give what the key label shows.

partial alphanumeric_keys
xkb_symbols "rus" {

    include "us_mirrored(basic)"
    name[Group1]= "Russian (US, phonetic)";

key.type[group1]="FOUR_LEVEL_ALPHABETIC";

    key	<LatA> {	[ Cyrillic_a, Cyrillic_A ]	};
    key	<LatB> {	[ Cyrillic_be, Cyrillic_BE ]	};
    key	<LatW> {	[ Cyrillic_ve, Cyrillic_VE ]	};
    key	<LatG> {	[ Cyrillic_ghe, Cyrillic_GHE ]	};
    key	<LatD> {	[ Cyrillic_de, Cyrillic_DE ]	};
    key	<LatE> {	[ Cyrillic_ie, Cyrillic_IE ]	};
    key	<AE11> {	[ Cyrillic_io, Cyrillic_IO, grave, asciitilde ] };
    key	<LatV> {	[ Cyrillic_zhe, Cyrillic_ZHE ]	};
    key	<LatZ> {	[ Cyrillic_ze, Cyrillic_ZE ]	};
    key	<LatI> {	[ Cyrillic_i, Cyrillic_I ]	};
    key	<LatJ> {	[ Cyrillic_shorti, Cyrillic_SHORTI ]	};
    key	<LatK> {	[ Cyrillic_ka, Cyrillic_KA ]	};
    key	<LatL> {	[ Cyrillic_el, Cyrillic_EL ]	};
    key	<LatM> {	[ Cyrillic_em, Cyrillic_EM ]	};
    key	<LatN> {	[ Cyrillic_en, Cyrillic_EN ]	};
    key	<LatO> {	[ Cyrillic_o, Cyrillic_O ]	};
    key	<LatP> {	[ Cyrillic_pe, Cyrillic_PE ]	};
    key	<LatR> {	[ Cyrillic_er, Cyrillic_ER ]	};
    key	<LatS> {	[ Cyrillic_es, Cyrillic_ES ]	};
    key	<LatT> {	[ Cyrillic_te, Cyrillic_TE ]	};
    key	<LatU> {	[ Cyrillic_u, Cyrillic_U ]	};
    key	<LatF> {	[ Cyrillic_ef, Cyrillic_EF ]	};
    key	<LatH> {	[ Cyrillic_ha, Cyrillic_HA ]	};
    key	<LatC> {	[ Cyrillic_tse, Cyrillic_TSE ]	};
    key <AC01> {        [ Cyrillic_che, Cyrillic_CHE, semicolon, colon ] };
    key	<AD11> {	[ Cyrillic_sha, Cyrillic_SHA, bracketleft, braceleft] };
    key	<AD12> {	[ Cyrillic_shcha, Cyrillic_SHCHA, bracketright, braceright ]	};
    key <AE12> {        [ Cyrillic_hardsign, Cyrillic_HARDSIGN, equal, plus ] };
    key	<LatY> {	[ Cyrillic_yeru, Cyrillic_YERU ]	};
    key	<LatX> {	[ Cyrillic_softsign, Cyrillic_SOFTSIGN ]	};
    key	<BKSL> {	[ Cyrillic_e, Cyrillic_E, backslash, bar ]	};
    key <AC11> {        [ Cyrillic_yu, Cyrillic_YU, apostrophe, quotedbl ] };
    key	<LatQ> {	[ Cyrillic_ya, Cyrillic_YA ]	};

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "mac" {

    include "us_mirrored(basic)"
    name[Group1]= "English (Macintosh)";
    key.type[group1]="FOUR_LEVEL";

    // Slightly improvised from http://homepage.mac.com/thgewecke/kblayout.jpg
    key <LSGT> { [   section,  plusminus,       section,        plusminus ] };
    key <AE11> { [     grave, asciitilde,    dead_grave,        dead_horn ] };
    key <AE10> { [	   1,     exclam,    exclamdown,            U2044 ] };
    key <AE09> { [	   2,         at,     trademark,         EuroSign ] };
    key <AE08> { [	   3, numbersign,      sterling,            U2039 ] };
    key <AE07> { [	   4,     dollar,          cent,            U203A ] };
    key <AE06> { [	   5,    percent,      infinity,            UFB01 ] };
    key <AE05> { [         6,asciicircum,       section,            UFB02 ] };
    key <AE04> { [	   7,  ampersand,     paragraph,     doubledagger ] };
    key <AE03> { [	   8,   asterisk, enfilledcircbullet,      degree ] };
    key <AE02> { [	   9,  parenleft,   ordfeminine,   periodcentered ] };
    key <AE01> { [	   0, parenright,     masculine,singlelowquotemark] };
    key <TLDE> { [     minus, underscore,        endash,           emdash ] };
    key <AE12> { [     equal,       plus,      notequal,        plusminus ] };

    key <AD10> { [	   q,          Q,            oe,               OE ] };
    key <AD09> { [	   w,          W,         U2211,doublelowquotemark] };
    key <AD08> { [	   e,          E,    dead_acute,            acute ] };
    key <AD07> { [	   r,          R,    registered,            U2030 ] };
    key <AD06> { [	   t,          T,        dagger,       dead_caron ] };
    key <AD05> { [	   y,          Y,           yen,       onequarter ] };
    key <AD04> { [	   u,        U,  dead_diaeresis,        diaeresis ] };
    key <AD03> { [	   i,        I, dead_circumflex,            U02C6 ] };
    key <AD02> { [	   o,          O,        oslash,         Ooblique ] };
    key <AD01> { [	   p,          P,      Greek_pi,            U220F ] };
    key <AD11> { [ bracketleft,  braceleft, leftdoublequotemark, rightdoublequotemark ] };
    key <AD12> { [bracketright, braceright, leftsinglequotemark, rightsinglequotemark ] };
    key <BKSL> { [ backslash,        bar, guillemotleft,   guillemotright ] };

    key <AC10> { [	   a,          A,         aring,            Aring ] };
    key <AC09> { [	   s,          S,        ssharp,      dead_stroke ] };
    key <AC08> { [	   d,          D, partialderivative,          eth ] };
    key <AC07> { [	   f,          F,      function,        dead_hook ] };
    key <AC06> { [	   g,          G,     copyright, dead_doubleacute ] };
    key <AC05> { [	   h,          H, dead_abovedot,    dead_belowdot ] };
    key <AC04> { [	   j,          J,         U2206,          onehalf ] };
    key <AC03> { [	   k,          K,dead_abovering,            UF8FF ] };

    key <AC02> { [	   l,          L,       notsign,            THORN ] };
    key <AC01> { [ semicolon,      colon,         U2026,            thorn ] };
    key <AC11> { [apostrophe,   quotedbl,            ae,               AE ] };

    key <AB10> { [	   z,          Z,   Greek_OMEGA,     dead_cedilla ] };
    key <AB09> { [	   x,          X,         U2248,      dead_ogonek ] };
				// unclear whether "approxeq" is 2248 or 2245
    key <AB08> { [	   c,          C,      ccedilla,         Ccedilla ] };
    key <AB07> { [	   v,          V,    squareroot,            U25CA ] };
    key <AB06> { [	   b,          B,      integral,         idotless ] };
    key <AB05> { [	   n,          N,    dead_tilde,            U02DC ] };
    key <AB04> { [	   m,          M,            mu,    threequarters ] };
    key <AB03> { [     comma,       less, lessthanequal,      dead_macron ] };
    key <AB02> { [    period,    greater, greaterthanequal,    dead_breve ] };
    key <AB01> { [     slash,   question,      division,     questiondown ] };

    include "level3(ralt_switch)"
};

// Colemak symbols for xkb on X.Org Server 7.x
// 2006-01-01 Shai Coleman, http://colemak.com/

partial alphanumeric_keys
xkb_symbols "colemak" {

    include "us_mirrored"
    name[Group1]= "English (Colemak)";

    key <AE11> { [        grave,   asciitilde,      dead_tilde,       asciitilde ] };
    key <AE10> { [            1,       exclam,      exclamdown,      onesuperior ] };
    key <AE09> { [            2,           at,       masculine,      twosuperior ] };
    key <AE08> { [            3,   numbersign,     ordfeminine,    threesuperior ] };
    key <AE07> { [            4,       dollar,            cent,         sterling ] };
    key <AE06> { [            5,      percent,        EuroSign,              yen ] };
    key <AE05> { [            6,  asciicircum,         hstroke,          Hstroke ] };
    key <AE04> { [            7,    ampersand,             eth,              ETH ] };
    key <AE03> { [            8,     asterisk,           thorn,            THORN ] };
    key <AE02> { [            9,    parenleft,  leftsinglequotemark,  leftdoublequotemark ] };
    key <AE01> { [            0,   parenright, rightsinglequotemark,  rightdoublequotemark ] };
    key <TLDE> { [        minus,   underscore,          endash,           emdash ] };
    key <AE12> { [        equal,         plus,        multiply,         division ] };

    key <AD10> { [            q,            Q,      adiaeresis,       Adiaeresis ] };
    key <AD09> { [            w,            W,           aring,            Aring ] };
    key <AD08> { [            f,            F,          atilde,           Atilde ] };
    key <AD07> { [            p,            P,          oslash,         Ooblique ] };
    key <AD06> { [            g,            G,     dead_ogonek,       asciitilde ] };
    key <AD05> { [            j,            J,         dstroke,          Dstroke ] };
    key <AD04> { [            l,            L,         lstroke,          Lstroke ] };
    key <AD03> { [            u,            U,          uacute,           Uacute ] };
    key <AD02> { [            y,            Y,      udiaeresis,       Udiaeresis ] };
    key <AD01> { [    semicolon,        colon,      odiaeresis,       Odiaeresis ] };
    key <AD11> { [  bracketleft,    braceleft,   guillemotleft,        0x1002039 ] };
    key <AD12> { [ bracketright,   braceright,  guillemotright,        0x100203a ] };
    key <BKSL> { [    backslash,          bar,      asciitilde,       asciitilde ] };

    key <AC10> { [            a,            A,          aacute,           Aacute ] };
    key <AC09> { [            r,            R,      dead_grave,       asciitilde ] };
    key <AC08> { [            s,            S,          ssharp,       asciitilde ] };
    key <AC07> { [            t,            T,      dead_acute, dead_doubleacute ] };
    key <AC06> { [            d,            D,  dead_diaeresis,       asciitilde ] };
    key <AC05> { [            h,            H,      dead_caron,       asciitilde ] };
    key <AC04> { [            n,            N,          ntilde,           Ntilde ] };
    key <AC03> { [            e,            E,          eacute,           Eacute ] };
    key <AC02> { [            i,            I,          iacute,           Iacute ] };
    key <AC01> { [            o,            O,          oacute,           Oacute ] };
    key <AC11> { [   apostrophe,     quotedbl,          otilde,           Otilde ] };

    key <AB10> { [            z,            Z,              ae,               AE ] };
    key <AB09> { [            x,            X, dead_circumflex,       asciitilde ] };
    key <AB08> { [            c,            C,        ccedilla,         Ccedilla ] };
    key <AB07> { [            v,            V,              oe,               OE ] };
    key <AB06> { [            b,            B,      dead_breve,       asciitilde ] };
    key <AB05> { [            k,            K,  dead_abovering,       asciitilde ] };
    key <AB04> { [            m,            M,     dead_macron,       asciitilde ] };
    key <AB03> { [        comma,         less,    dead_cedilla,       asciitilde ] };
    key <AB02> { [       period,      greater,   dead_abovedot,       asciitilde ] };
    key <AB01> { [        slash,     question,    questiondown,       asciitilde ] };

    key <CAPS> { [    BackSpace,    BackSpace,       BackSpace,        BackSpace ] };
    key <LSGT> { [        minus,   underscore,          endash,           emdash ] };
    key <SPCE> { [        space,        space,           space,     nobreakspace ] };

    include "level3(ralt_switch)"
};

// I do NOT like dead-keys - the International keyboard as defined by Microsoft
// doesn't fit my needs. Why use two keystrokes for all simple characters (eg '
// and <space> generates a single ') just to have an é (eacute) in two strokes
// as well? I type ' more often than é (eacute).
//
// This file works just like a regular keyboard, BUT has all dead-keys
// accessible at level3 (through AltGr). An ë (ediaeresis) is now: AltGr+"
// followed by an e. In other words, this keyboard is not international as long
// as you leave the right Alt key alone.
//
// The original MS International keyboard was intended for Latin1 (iso8859-1).
// With the introduction of iso8859-15, the (important) ligature oe (and OE)
// became available. I added them next to ae. Because I write ediaeresis more
// often than registered, I moved registered to be next to copyright and added
// ediaeresis and idiaeresis. - Adriaan

partial alphanumeric_keys
xkb_symbols "altgr-intl" {

   include "us_mirrored(intl)"
   name[Group1]= "English (international AltGr dead keys)";

// five dead keys moved into level3:

   key <AE11> { [    grave, asciitilde,  dead_grave,   dead_tilde      ] };
   key <AC11> { [apostrophe,quotedbl,    dead_acute,   dead_diaeresis  ] };

// diversions from the MS Intl keyboard:

   key <AE10> { [        1, exclam,      onesuperior,  exclamdown      ] };
   key <AD07> { [        r, R,           ediaeresis,   Ediaeresis      ] };
   key <AC04> { [        j, J,           idiaeresis,   Idiaeresis      ] };
   key <AB09> { [        x, X,           oe,           OE              ] };
   key <AB07> { [        v, V,           registered,   registered      ] };

// onequarter etc (not in iso8859-15) moved to get three unshifted deadkeys:

   key <AE05> { [        6, asciicircum, dead_circumflex, onequarter    ] };
   key <AE04> { [        7, ampersand,   dead_horn,       onehalf       ] };
   key <AE03> { [        8, asterisk,    dead_ogonek,     threequarters ] };

   include "level3(ralt_switch)"
};

// Intel ClassmatePC Keyboard Layout
// by Piter PUNK <piterpk@terra.com.br>
//
// The keyboard layouts below maps the us(basic), us(intl) and us(alt-intl)
// to ClassmatePC keyboard. All layouts uses RCTL as level3(switch) since
// the keyboard doesn't have AltGr key. The EuroSign is engraved at 5 key.

// classmate - us(basic)
partial alphanumeric_keys
xkb_symbols "classmate" {
    include "us_mirrored(basic)"
    name[Group1]= "English (US)";

    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };

    include "eurosign(5)"
    include "level3(switch)"
};

// classmate-intl - us(intl)
// RCTL is generated by Fn+Alt, because that, when trying to access
// the level3 symbols at 7,8,9,0,u,i,o,p,j,k,l,;,m,. and / we got
// the keypad keycodes. The keypad is changed to make Fn+Alt+<KP_key>
// generate the same symbol as the original key.
partial alphanumeric_keys
xkb_symbols "classmate-intl" {
    include "us_mirrored(intl)"
    name[Group1]= "USA - ClassmatePC (International)";
    key.type[Group1]="FOUR_LEVEL";

    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };

    key <KP7>  { [	KP_Home,		KP_7,	
			onehalf,		dead_horn	] };
    key <KP8>  { [	KP_Up,			KP_8,
			threequarters,		dead_ogonek	] };
    key <KP9>  { [	KP_Prior,		KP_9,
			leftsinglequotemark,	dead_breve	] };
    key <KPMU> { [ 	KP_Multiply,		KP_Multiply,
			rightsinglequotemark,	dead_abovering	] };

    key <KP4>  { [	KP_Left,		KP_4,
			uacute,			Uacute		] };
    key <KP5>  { [	KP_Begin,		KP_5,
			iacute,			Iacute		] };
    key <KP6>  { [	KP_Right,		KP_6,
			oacute,			Oacute		] };
    key <KPSU> { [	KP_Subtract,		KP_Subtract,
			odiaeresis,		Odiaeresis	] };

    key <KP2>  { [	KP_Down,		KP_2,
			oe,			OE		] };
    key <KP3>  { [	KP_Next,		KP_3,
			oslash,			Ooblique	] };
    key <KPAD> { [ 	KP_Add,     		KP_Add,
			paragraph,		degree          ] };

    key <KP0>  { [	KP_Insert,		KP_0,
			mu,			mu	] };
    key <KPDL> { [	KP_Delete,		KP_Decimal,
			dead_abovedot,		dead_caron	] };
    key <KPDV> { [ 	KP_Divide,   		KP_Divide,
			questiondown,		dead_hook       ] };

    include "level3(switch)"
};

// classmate-alt-intl - us(alt-intl)
// RCTL is generated by Fn+Alt, because that, when trying to access
// the level3 symbols at 7,8,9,0,u,i,o,p,j,k,l,;,m,. and / we got
// the keypad keycodes. The keypad is changed to make Fn+Alt+<KP_key>
// generate the same symbol as the original key.
partial alphanumeric_keys
xkb_symbols "classmate-alt-intl" {
    include "us_mirrored(alt-intl)"
    name[Group1]= "USA - ClassmatePC (Alternative international)";
    key.type[Group1]="FOUR_LEVEL";

    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };

    key <KPSU> { [	KP_Subtract,		KP_Subtract	] };

    key <KP9>  { [	KP_Prior,		KP_9,
			leftsinglequotemark,	dead_breve	] };
    key <KPMU> { [ 	KP_Multiply,		KP_Multiply,
			rightsinglequotemark,	dead_abovering	] };

    key <KPAD> { [ 	KP_Add,     		KP_Add,
			dead_ogonek,		dead_diaeresis   ] };

    key <KPDL> { [	KP_Delete,		KP_Decimal,
			dead_abovedot,		dead_circumflex	] };
    key <KPDV> { [ 	KP_Divide,   		KP_Divide,
			dead_hook,		dead_hook       ] };

    include "level3(switch)"
};

// classmate-altgr-intl - us(altgr-intl)
// RCTL is generated by Fn+Alt, because that, when trying to access
// the level3 symbols at 7,8,9,0,u,i,o,p,j,k,l,;,m,. and / we got
// the keypad keycodes. The keypad is changed to make Fn+Alt+<KP_key>
// generate the same symbol as the original key.
partial alphanumeric_keys
xkb_symbols "classmate-altgr-intl" {
    include "us_mirrored(altgr-intl)"
    name[Group1]= "USA - ClassmatePC (International Fn+Alt dead-keys)";
    key.type[Group1]="FOUR_LEVEL";

    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };

    key <KP7>  { [	KP_Home,		KP_7,	
			dead_horn,		dead_horn	] };
    key <KP8>  { [	KP_Up,			KP_8,
			dead_ogonek,		dead_ogonek	] };
    key <KP9>  { [	KP_Prior,		KP_9,
			leftsinglequotemark,	dead_breve	] };
    key <KPMU> { [ 	KP_Multiply,		KP_Multiply,
			rightsinglequotemark,	dead_abovering	] };

    key <KP4>  { [	KP_Left,		KP_4,
			uacute,			Uacute		] };
    key <KP5>  { [	KP_Begin,		KP_5,
			iacute,			Iacute		] };
    key <KP6>  { [	KP_Right,		KP_6,
			oacute,			Oacute		] };
    key <KPSU> { [	KP_Subtract,		KP_Subtract,
			odiaeresis,		Odiaeresis	] };

    key <KP1>  { [	KP_End,			KP_1,
			idiaeresis,		Idiaeresis	] };
    key <KP2>  { [	KP_Down,		KP_2,
			oe,			OE		] };
    key <KP3>  { [	KP_Next,		KP_3,
			oslash,			Ooblique	] };
    key <KPAD> { [ 	KP_Add,     		KP_Add,
			paragraph,		degree          ] };

    key <KP0>  { [	KP_Insert,		KP_0,
			mu,			mu	] };
    key <KPDL> { [	KP_Delete,		KP_Decimal,
			dead_abovedot,		dead_caron	] };
    key <KPDV> { [ 	KP_Divide,   		KP_Divide,
			questiondown,		dead_hook       ] };

    include "level3(switch)"
};

partial alphanumeric_keys
xkb_symbols "olpc" {

   include "us_mirrored(basic)"
   name[Group1]= "English (US)";

   // OLPC international US English keyboard layout.
   // It's a little different from the usual international layout.
   // See: http://wiki.laptop.org/go/Image:Keyboard_english.png

   key <AE11> { [     grave, asciitilde,    dead_grave, dead_tilde ] };
   key <AE10> { [         1,     exclam,    exclamdown, exclamdown ] };
   key <AE09> { [         2,         at,       notsign,    notsign ] };
   key <AE08> { [         3, numbersign,     0x1000300,  0x1000300 ] }; // combining grave
   key <AE07> { [         4,     dollar,     0x1000301,  0x1000301 ] }; // combining acute
   key <AE06> { [         5,    percent,     0x1000306,  0x1000306 ] }; // combining breve above
   key <AE05> { [         6,asciicircum,     0x100030A,  0x100030A ] }; // combining ring above
   key <AE04> { [         7,  ampersand,     0x1000302,  0x1000302 ] }; // combining circumflex above
   key <AE03> { [         8,   asterisk,     0x100030C,  0x100030C ] }; // combining caron above
   key <AE02> { [         9,  parenleft,     0x1000307,  0x1000307 ] }; // combining dot above
   key <AE01> { [         0, parenright,     0x1000308,  0x1000308 ] }; // combining diaeresis above
   key <TLDE> { [     minus, underscore,     0x1000304,  0x1000304 ] }; // combining macron above
   key <AE12> { [     equal,       plus,     0x1000303,  0x1000303 ] }; // combining tilde above

   key <AD10> { [         q,          Q,  Greek_omega, Greek_OMEGA ] };
   key <AD09> { [         w,          W,       oslash,      Oslash ] };
   key <AD08> { [         e,          E,           oe,          OE ] };
   key <AD07> { [         r,          R,    0x1000327,   0x1000327 ] }; // combining cedilla
   key <AD06> { [         t,          T,    0x100032E,   0x100032E ] }; // combining breve below
   key <AD05> { [         y,          Y,    0x1000325,   0x1000325 ] }; // combining ring below
   key <AD04> { [         u,          U,    0x100032D,   0x100032D ] }; // combining circumflex below
   key <AD03> { [         i,          I,    0x100032C,   0x100032C ] }; // combining caron below
   key <AD02> { [         o,          O,    0x1000323,   0x1000323 ] }; // combining dot below
   key <AD01> { [         p,          P,    0x1000324,   0x1000324 ] }; // combining diaeresis below
   key <AD11> { [ bracketleft,  braceleft,  0x1000331,   0x1000331 ] }; // combining macron below
   key <AD12> { [bracketright, braceright,  0x1000330,   0x1000330 ] }; // combining tilde below

   key <AC10>  { [         a,          A,          ae,               AE ] };
   key <AC09>  { [         s,          S,      ssharp,        0x1001E9C ] }; // uppercase S sharp
   key <AC08>  { [         d,          D,         eth,              ETH ] };
   key <AC07>  { [         f,          F,       thorn,            THORN ] };
   key <AC05>  { [         h,          H,    sterling,         sterling ] };
   key <AC04>  { [         j,          J,    EuroSign,         EuroSign ] };
   key <AC01>  { [ semicolon,      colon,   masculine,      ordfeminine ] };
   key <AC11>  { [ apostrophe,  quotedbl,    currency,         currency ] };
   key <AC12>  { [ backslash,        bar,      section,         section ] };

   key <AB08>  { [         c,          C,    ccedilla,         Ccedilla ] };
   key <AB05>  { [         n,          N,      ntilde,           Ntilde ] };
   key <AB04>  { [         m,          M,          mu,               mu ] };
   key <AB03>  { [     comma,     less,  guillemotleft,   guillemotleft ] };
   key <AB02>  { [    period,  greater, guillemotright,  guillemotright ] };
   key <AB01>  { [     slash,   question, questiondown,    questiondown ] };

   key <I219>  { [  multiply,   division, ISO_Next_Group, ISO_Prev_Group ] };

   include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "olpc2" {
   include "us_mirrored(olpc)"
   name[Group1]= "English (the divide/multiply keys toggle the layout)";
   include "group(olpc)"
};

xkb_symbols "olpcm" {

   include "us_mirrored(basic)"
   name[Group1]= "English (US)";

   // Mechanical (non-membrane) OLPC int'l US English keyboard layout.
   // See: http://wiki.laptop.org/go/OLPC_English_Non-membrane_Keyboard

   key <AE11> { [     grave, asciitilde,    dead_grave, dead_tilde ] };
   key <AE10> { [         1,     exclam,    exclamdown, exclamdown ] };
   key <AE09> { [         2,         at,       notsign,    notsign ] };
   key <AE08> { [         3, numbersign,     0x1000300,  0x1000300 ] }; // combining grave
   key <AE07> { [         4,     dollar,     0x1000301,  0x1000301 ] }; // combining acute
   key <AE06> { [         5,    percent,     0x1000306,  0x1000306 ] }; // combining breve above
   key <AE05> { [         6,asciicircum,     0x100030A,  0x100030A ] }; // combining ring above
   key <AE04> { [         7,  ampersand,     0x1000302,  0x1000302 ] }; // combining circumflex above
   key <AE03> { [         8,   asterisk,     0x100030C,  0x100030C ] }; // combining caron above
   key <AE02> { [         9,  parenleft,     0x1000307,  0x1000307 ] }; // combining dot above
   key <AE01> { [         0, parenright,     0x1000308,  0x1000308 ] }; // combining diaeresis above
   key <TLDE> { [     minus, underscore,     0x1000304,  0x1000304 ] }; // combining macron above

   key <AD10> { [         q,          Q,  Greek_omega, Greek_OMEGA ] };
   key <AD09> { [         w,          W,       oslash,      Oslash ] };
   key <AD08> { [         e,          E,           oe,          OE ] };
   key <AD07> { [         r,          R,    0x1000327,   0x1000327 ] }; // combining cedilla
   key <AD06> { [         t,          T,    0x100032E,   0x100032E ] }; // combining breve below
   key <AD05> { [         y,          Y,    0x1000325,   0x1000325 ] }; // combining ring below
   key <AD04> { [         u,          U,    0x100032D,   0x100032D ] }; // combining circumflex below
   key <AD03> { [         i,          I,    0x100032C,   0x100032C ] }; // combining caron below
   key <AD02> { [         o,          O,    0x1000323,   0x1000323 ] }; // combining dot below
   key <AD01> { [         p,          P,    0x1000324,   0x1000324 ] }; // combining diaeresis below
   key <AD11> { [ bracketleft,  braceleft,  0x1000331,   0x1000331 ] }; // combining macron below
   key <AD12> { [bracketright, braceright,  0x1000330,   0x1000330 ] }; // combining tilde below

   key <AC10>  { [         a,          A,          ae,               AE ] };
   key <AC09>  { [         s,          S,      ssharp,        0x1001E9C ] }; // uppercase S sharp
   key <AC08>  { [         d,          D,         eth,              ETH ] };
   key <AC07>  { [         f,          F,       thorn,            THORN ] };
   key <AC05>  { [         h,          H,    sterling,         sterling ] };
   key <AC04>  { [         j,          J,    EuroSign,         EuroSign ] };
   key <AC01>  { [ semicolon,      colon,   masculine,      ordfeminine ] };
   // no AC11 or AC12 on olpcm

   key <AB08>  { [         c,          C,    ccedilla,         Ccedilla ] };
   key <AB05>  { [         n,          N,      ntilde,           Ntilde ] };
   key <AB04>  { [         m,          M,          mu,               mu ] };
   key <AB03>  { [     comma,     less,  guillemotleft,   guillemotleft ] };
   key <AB02>  { [    period,  greater, guillemotright,  guillemotright ] };
   key <AB01>  { [     slash,   question, questiondown,    questiondown ] };

   key <AA02>  { [ backslash,        bar,      section,         section ] };
   key <AA06>  { [     equal,       plus,     0x1000303,  0x1000303 ] };
   key <AA07>  { [ apostrophe,  quotedbl,    currency,         currency ] };

   include "level3(ralt_switch)"
};

// Based on Cherokee Nation Official Layout
// http://www.cherokee.org/extras/downloads/font/Keyboard.htm

partial alphanumeric_keys modifier_keys
xkb_symbols "chr" {

    name[Group1]= "Cherokee";
    key.type[group1]="ALPHABETIC";

    key <AE11> { [      grave,      U13CA ] };
    key <AE10> { [          1,      U13B1 ] };
    key <AE09> { [          2,      U13C7 ] };
    key <AE08> { [          3,      U13E7 ] };
    key <AE07> { [      U13D9,      U13B0 ] };
    key <AE06> { [      U13E6,      U13B9 ] };
    key <AE05> { [      U13DC,      U13DD ] };
    key <AE04> { [      U13CB,      U13E1 ] };
    key <AE03> { [      U13D6,      U13BA ] };
    key <AE02> { [      U13D2,  parenleft ] };
    key <AE01> { [      U13C4, parenright ] };
    key <TLDE> { [      U13BF,      U13BC ] };
    key <AE12> { [      U13F3,      U13BD ] };

    key <AD10> { [      U13AA,      U13C6 ] };
    key <AD09> { [      U13B3,      U13EB ] };
    key <AD08> { [      U13A1,      U13E3 ] };
    key <AD07> { [      U13DB,      U13CF ] };
    key <AD06> { [      U13D4,      U13D8 ] };
    key <AD05> { [      U13EF,      U13F2 ] };
    key <AD04> { [      U13A4,      U13AD ] };
    key <AD03> { [      U13A2,      U13F1 ] };
    key <AD02> { [      U13A3,      U13EC ] };
    key <AD01> { [      U13C1,      U13EA ] };
    key <AD11> { [      U13D5,      U13D1 ] };
    key <AD12> { [      U13B6,      U13E4 ] };
    key <BKSL> { [      U13E9,      U13EE ] };

    key <AC10> { [      U13A0,      U13CC ] };
    key <AC09> { [      U13CD,      U13CE ] };
    key <AC08> { [      U13D7,      U13D0 ] };
    key <AC07> { [      U13A9,      U13C8 ] };
    key <AC06> { [      U13A6,      U13E5 ] };
    key <AC05> { [      U13AF,      U13B2 ] };
    key <AC04> { [      U13DA,      U13AB ] };
    key <AC03> { [      U13B8,      U13A7 ] };
    key <AC02> { [      U13B5,      U13AE ] };
    key <AC01> { [      U13E8,      U13E0 ] };
    key <AC11> { [ apostrophe,   quotedbl ] };

    key <AB10> { [      U13AC,      U13C3 ] };
    key <AB09> { [      U13F4,      U13ED ] };
    key <AB08> { [      U13D3,      U13DF ] };
    key <AB07> { [      U13A5,      U13DE ] };
    key <AB06> { [      U13A8,      U13F0 ] };
    key <AB05> { [      U13BE,      U13BB ] };
    key <AB04> { [      U13C5,      U13B7 ] };
    key <AB03> { [      comma,      U13E2 ] };
    key <AB02> { [     period,      U13B4 ] };
    key <AB01> { [      U13C2,      U13C9 ] };
};

// Serbian charecters added as third level symbols to US keyboard layout.

partial alphanumeric_keys
xkb_symbols "hbs" {

  include "us_mirrored"
  name[Group1]= "Serbo-Croatian (US)";

  key <AE11> { [ grave, asciitilde ] };
  key <AE05> { [ 6, dead_caron, asciicircum, asciicircum ] };
  key <AE03> { [ 8, asterisk, multiply, division ] };
  key <TLDE> { [ minus, underscore, endash, emdash ] };
  key <AC02> { [ l, L, U1C9, U1C8 ] };
  key <AB05> { [ n, N, U1CC, U1CB ] };
  key <AB10> { [ z, Z, U1C6, U1C5 ] };
  key <AD08> { [ e, E, EuroSign, cent ] };
  key <AC08> { [ d, D, dstroke, Dstroke ] };
  key <AC11> { [ dead_acute, quotedbl, apostrophe, apostrophe ] };
  key <SPCE> { [ space, space, nobreakspace, nobreakspace ] };
  key <AB03> { [ comma, less, U3003, guillemotright ] };
  key <AB02> { [ period, greater, ellipsis, guillemotleft ] };

  include "level3(ralt_switch)"
};

//based on http://upload.wikimedia.org/wikipedia/commons/1/18/T-Mobile_G1_launch_event_2.jpg
partial alphanumeric_keys
xkb_symbols "htcdream" {
        include "inet(htcdream)"
        name[Group1]= "English (US)";

        //second row
        key <AD10> { [ q, Q, Tab, Tab ] };
        key <AD09> { [ w, W, grave, grave ] };
        key <AD08> { [ e, E, underscore, underscore ] };
        key <AD07> { [ r, R, sterling, sterling ] };
        key <AD06> { [ t, T, EuroSign, EuroSign ] };
        key <AD05> { [ y, Y, division, division ] };
        key <AD04> { [ u, U, multiply, multiply ] };
        key <AD03> { [ i, I, minus, minus ] };
        key <AD02> { [ o, O, plus, plus ] };
        key <AD01> { [ p, P, equal, equal ] };

        //third row
        key <AC10> { [ a, A, NoSymbol, NoSymbol ] };
        key <AC09> { [ s, S, bar, bar ] };
        key <AC08> { [ d ,D, backslash, backslash ] };
        key <AC07> { [ f, F, braceleft, braceleft ] };
        key <AC06> { [ g, G, braceright, braceright ] };
        key <AC05> { [ h, H, colon, colon ] };
        key <AC04> { [ j, J, semicolon, semicolon ] };
        key <AC03> { [ k, K, quotedbl, quotedbl ] };
        key <AC02> { [ l, L, apostrophe, apostrophe ] };

        //forth row
        key <AB10> { [ z, Z, NoSymbol, NoSymbol ] };
        key <AB09> { [ x, X, NoSymbol, NoSymbol ] };
        key <AB08> { [ c, C, NoSymbol, NoSymbol ] };
        key <AB07> { [ v, V, bracketleft, bracketleft ] };
        key <AB06> { [ b, B, bracketright, bracketright ] };
        key <AB05> { [ n, N, less, less ] };
        key <AB04> { [ m, M, greater, greater ] };
        key <AB03> { [ comma, comma, question, question ] };

        //fifth row
        key <FK15> { [ at, at, asciitilde, asciitilde ] };

        include "level3(alt_switch)"
};

// Workman Keyboard Layout symbols for xkb on X.Org Server 7.x
// 09-06-2010 OJ Bucao. http://www.workmanlayout.com

partial alphanumeric_keys
xkb_symbols "workman" {

    include "us_mirrored(basic)"
    name[Group1]= "English (Workman)";

    key <AD10> {  [   q,  Q   ] };
    key <AD09> {  [   d,  D   ] };
    key <AD08> {  [   r,  R   ] };
    key <AD07> {  [   w,  W   ] };
    key <AD06> {  [   b,  B   ] };
    key <AD05> {  [   j,  J   ] };
    key <AD04> {  [   f,  F   ] };
    key <AD03> {  [   u,  U   ] };
    key <AD02> {  [   p,  P   ] };
    key <AD01> {  [   semicolon,  colon   ] };

    key <AC10> {  [   a,  A   ] };
    key <AC09> {  [   s,  S   ] };
    key <AC08> {  [   h,  H   ] };
    key <AC07> {  [   t,  T   ] };
    key <AC06> {  [   g,  G   ] };
    key <AC05> {  [   y,  Y   ] };
    key <AC04> {  [   n,  N   ] };
    key <AC03> {  [   e,  E   ] };
    key <AC02> {  [   o,  O   ] };
    key <AC01> {  [   i,  I   ] };

    key <AB10> {  [   z,  Z   ] };
    key <AB09> {  [   x,  X   ] };
    key <AB08> {  [   m,  M   ] };
    key <AB07> {  [   c,  C   ] };
    key <AB06> {  [   v,  V   ] };
    key <AB05> {  [   k,  K   ] };
    key <AB04> {  [   l,  L   ] };

    key <CAPS> { [    BackSpace,       Escape,       BackSpace,        BackSpace ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "workman-intl" {

    include "us_mirrored(intl)"
    name[Group1]= "English (Workman, international with dead keys)";

    key <AD10> { [     q,          Q,    adiaeresis,       Adiaeresis ] };
    key <AD09> { [     d,          D,           eth,              ETH ] };
    key <AD08> { [     r,          R,    registered,       registered ] };
    key <AD07> { [     w,          W,         aring,            Aring ] };
    key <AD06> { [     b,          B,             b,                B ] };
    key <AD05> { [     j,          J,             j,                J ] };
    key <AD04> { [     f,          F,             f,                F ] };
    key <AD03> { [     u,          U,        uacute,           Uacute ] };
    key <AD02> { [     p,          P,    odiaeresis,       Odiaeresis ] };
    key <AD01> { [ semicolon,  colon,     paragraph,           degree ] };

    key <AC10> { [     a,          A,        aacute,           Aacute ] };
    key <AC09> { [     s,          S,        ssharp,          section ] };
    key <AC08> { [     h,          H,             h,                H ] };
    key <AC07> { [     t,          T,         thorn,            THORN ] };
    key <AC06> { [     g,          G,             g,                G ] };
    key <AC05> { [     y,          Y,    udiaeresis,       Udiaeresis ] };
    key <AC04> { [     n,          N,        ntilde,           Ntilde ] };
    key <AC03> { [     e,          E,        eacute,           Eacute ] };
    key <AC02> { [     o,          O,        oacute,           Oacute ] };
    key <AC01> { [     i,          I,        iacute,           Iacute ] };

    key <AB10> { [     z,          Z,            ae,               AE ] };
    key <AB09> { [     x,          X,             x,                X ] };
    key <AB08> { [     m,          M,            mu,               mu ] };
    key <AB07> { [     c,          C,     copyright,             cent ] };
    key <AB06> { [     v,          V,             v,                V ] };
    key <AB05> { [     k,          K,            oe,               OE ] };
    key <AB04> { [     l,          L,        oslash,         Ooblique ] };

    key <CAPS> { [ BackSpace, Escape,     BackSpace,        BackSpace ] };

    include "level3(ralt_switch)"
};

// Norman keyboard layout symbols for xkb on X.Org Server 7.x
// Written 11/23/2012, revised 3/7/2013 by David Norman http://normanlayout.info
// To the extent possible under law, the author(s) have dedicated all
// copyright and related and neighboring rights to this software to the
// public domain worldwide. This software is distributed without any warranty.

partial alphanumeric_keys
xkb_symbols "norman" {

    include "us_mirrored(basic)"
    name[Group1]= "English (Norman)";

    key <AD10> { [ q, Q ] };
    key <AD09> { [ w, W ] };
    key <AD08> { [ d, D ] };
    key <AD07> { [ f, F ] };
    key <AD06> { [ k, K ] };
    key <AD05> { [ j, J ] };
    key <AD04> { [ u, U ] };
    key <AD03> { [ r, R ] };
    key <AD02> { [ l, L ] };
    key <AD01> { [ semicolon, colon ] };

    key <AC10> { [ a, A ] };
    key <AC09> { [ s, S ] };
    key <AC08> { [ e, E ] };
    key <AC07> { [ t, T ] };
    key <AC06> { [ g, G ] };
    key <AC05> { [ y, Y ] };
    key <AC04> { [ n, N ] };
    key <AC03> { [ i, I ] };
    key <AC02> { [ o, O ] };
    key <AC01> { [ h, H ] };

    key <AB10> { [ z, Z ] };
    key <AB09> { [ x, X ] };
    key <AB08> { [ c, C ] };
    key <AB07> { [ v, V ] };
    key <AB06> { [ b, B ] };
    key <AB05> { [ p, P ] };
    key <AB04> { [ m, M ] };

    key <CAPS> { [ BackSpace ] };

    include "level3(ralt_switch)"
};

// EXTRAS:

// Czech, Slovak and German charecters added as third level symbols to US keyboard layout.
partial alphanumeric_keys
xkb_symbols "cz_sk_de" {

    include "us_mirrored"
    name[Group1]="Czech Slovak and German (US)";

    key <AE11>  { [grave,   asciitilde, uring,      Uring       ] };
    key <AE10>	{ [    1,	exclam,	uacute,	    Uacute	] };
    key <AE09>	{ [    2,           at, ecaron,	    Ecaron	] };
    key <AE08>	{ [    3,   numbersign, scaron,	    Scaron	] };
    key <AE07>	{ [    4,       dollar,	ccaron,	    Ccaron	] };
    key <AE06>	{ [    5,      percent, rcaron,	    Rcaron	] };
    key <AE05>	{ [    6,  asciicircum, zcaron,	    Zcaron	] };
    key <AE04>	{ [    7,    ampersand,	yacute,	    Yacute	] };
    key <AE03>	{ [    8,     asterisk, aacute,	    Aacute	] };
    key <AE02>	{ [    9,    parenleft,	iacute,	    Iacute	] };
    key <AE01>	{ [    0,   parenright, eacute,	    Eacute	] };
    key <TLDE>	{ [minus,   underscore, ssharp,     0x1001E9E	] };
    key <AE12>	{ [equal,	  plus, dead_acute, dead_caron  ] };

    key <AD08>	{ [         e,          E,     EuroSign,     Eacute ]	};

    key <AD11>	{ [bracketleft, braceleft,   udiaeresis,   Udiaeresis ]	};
    key <AC01>	{ [ semicolon,      colon,   odiaeresis,   Odiaeresis ]	};
    key <AC11>	{ [apostrophe,      quotedbl,adiaeresis,   Adiaeresis ]	};

    key <AC10>	{ [         a,          A,     aacute,	     Aacute   ]	};
    key <AD03>	{ [         i,          I,     iacute,	     Iacute   ]	};
    key <AD02>	{ [         o,          O,     oacute,       Oacute   ]	};
    key <AD05>	{ [         y,          Y,     yacute,       Yacute   ]	};
    key <AD04>	{ [         u,          U,     uring,	     Uring    ]	};

    key <AC09>	{ [         s,          S,     scaron,       Scaron   ]	};
    key <AB10>	{ [         z,          Z,     zcaron,	     Zcaron   ]	};
    key <AB08>	{ [         c,          C,     ccaron,       Ccaron   ]	};
    key <AD07>	{ [         r,          R,     rcaron,	     Rcaron   ]	};
    key <AD06>	{ [         t,          T,     tcaron,	     Tcaron   ]	};
    key <AC08>	{ [         d,          D,     dcaron,	     Dcaron   ]	};
    key <AB05>	{ [         n,          N,     ncaron,	     Ncaron   ]	};
    key <AC02>  { [         l,          L,     lcaron,       Lcaron   ] };
    key <AD01>  { [         p,          P,ocircumflex,  Ocircumflex   ] };

    key <SPCE>  { [     space,       space, nobreakspace, nobreakspace] };

    include "level3(ralt_switch)"
};

// XCompose is out! Unicode combining is in!  For those of us who live
// on the edge: A keymap using Unicode combining characters instead of
// deadkeys.  This variation does not deviate from the lame MS-style
// US-intl layout; but it uses AltGr for combining, like altgr-intl.
//
// This might break your font layout layout systems (because they
// suck), caveat emptor.  Also, most of today's software will count
// individual combining marks for selection, deletion, character
// counting &c., and won't be smart enough to do canonical equivalence
// when searching, &c.
//
// With Unicode combining you use "handwriting order", not
// "typewriting order" as with deadkeys.  That is, you first type the
// base character, then the diacritics/accents/modifiers.  This has
// the advantage of avoiding hidden states --- each keypress changes
// something on screen.
//
// TODO: as of now, this duplicates all us(intl) functionality with
// combining.  With care, perhaps we could add more combining marks
// not present in intl, and support all major languages.
partial alphanumeric_keys
xkb_symbols "intl-unicode" {

 name[Group1]= "English (US, international AltGr Unicode combining)";

 include "us_mirrored(intl)"
 include "level3(ralt_switch)"

 // grave, tilde
 key <AE11> { [grave, asciitilde, U0300, U0303 ] };
 // double acute
 key <AE09> { [ 2, at, twosuperior, U030B ] };
 // macron
 key <AE08> { [ 3, numbersign, threesuperior, U0304 ] };
 // circumflex
 key <AE05> { [ 6, asciicircum, onequarter, U0302 ] };
 // horn
 key <AE04> { [ 7, ampersand, onehalf, U031B ] };
 // ogonek
 key <AE03> { [ 8, asterisk, threequarters, U0328 ] };
 // breve
 key <AE02> { [	 9, parenleft, leftsinglequotemark, U0306 ] };
 // abovering
 key <AE01> { [	 0, parenright, rightsinglequotemark, U030A ] };

 // belowdot
 key <TLDE> { [ minus, underscore, yen, U0323 ] };
 // acute, diaeresis
 key <AC11> { [apostrophe, quotedbl, U0301, U0308 ] };
 // abovedot, caron
 key <AB02> { [ period, greater, U0307, U030C ] };
 // hook
 key <AB01> { [ slash, question, questiondown, U0309 ] };

 // alt-intl compatibility
 // cedilla, caron
 key <AB03> { [ comma, less,	 U0327, U030C ] };
 // ogonek, diaeresis
 key <AC01> { [ semicolon, colon,	 U0328, U0308 ] };
 // doubleacute, horn
 key <AE12> { [ equal, plus,	 U030B, U031B ] };

 // we don't do combining latin letters and combining enclosures
 // because support for those is very rare.
};

// XCompose is out! Unicode combining is in! For those of us who live
// on the edge: A keymap using Unicode combining characters instead of
// deadkeys. This variation does break compatibility with us-intl,
// whenever I thought it would be more mnemonic or Unicodeish.
partial alphanumeric_keys
xkb_symbols "alt-intl-unicode" {

 name[Group1]= "English (US, international AltGr Unicode combining, alternative)";

 include "us_mirrored(intl-unicode)"

 // easier macron; em-dash.
 // em-dash is available via compose, but I added here since it's such
 // an important typographic character.
 key <TLDE> { [ minus, underscore, U0304, U2014 ] };

 // belowdot, abovedot (caron at coma/less key, per above)
 key <AB02> { [ period, greater, U0323, U0307 ] };

};

partial alphanumeric_keys
xkb_symbols "ats" {

    include "us_mirrored"
    name[Group1]= "Atsina";

    //Using Dead key to get COMBINING COMMA ABOVE for ejectives on
    //q, l, t, s, m, g, k, p, w, y, r
    //XCompose key is used for the other accute and grave.

    key <AD08> { [ e, E, eacute, Eacute  ] };
    key <AD04> { [ u, U, uacute, Uacute  ] };
    key <AD03> { [ i, I, iacute, Iacute  ] };
    key <AD02> { [ o, O, oacute, Oacute  ] };
    key <AD11> { [ bracketleft,	braceleft, U03B8 ] };
    key <AD12> { [ bracketright, braceright, U010D, U010C ] };
    //U+010C (uppercase Č) and U+010D (lowercase č).

    key <AC10> { [ a, A, aacute, Aacute  ] };

    //Small letter Open use compose to key get acute accent
    key <AB08> { [ c,	C, U0254, U0186		  ] };
    key <AB03> { [ comma,     less, U0313 ] };
    key <AB01> { [ slash, question, U0294 ] };

    include "level3(ralt_switch)"
    include "compose(rctrl)"
};

partial alphanumeric_keys
xkb_symbols "crd" {

  include "us_mirrored"
  name[Group1]= "Coeur d'Alene Salish";

  key <AD09> { [         w,           W, U02B7, U02B7 ] };
  key <AE04> { [         7,   ampersand, U0294        ] };
  key <AD10> { [         q,           Q, U221A        ] };
  key <AB07> { [         v,           V, U0259        ] };
  key <BKSL> { [ backslash,         bar, U026B        ] };
  key <AD08> { [         e,           E, U025B        ] };
  key <AD03> { [         i,           I, U026A        ] };
  key <AC04> { [         j,           J, U01F0        ] };
  key <AE05> { [         6, asciicircum, U0295        ] };
  key <AC09> { [         s,           S, U0161        ] };
  key <AB08> { [         c,           C, U010D        ] };
  key <AD02> { [         o,           O, U0254        ] };
  key <AB02> { [    period,     greater, U0323        ] };

  include "level3(ralt_switch)"
  include "compose(rctrl)"
};


partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/us(sun_type6)"
};
